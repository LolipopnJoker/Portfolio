# bar plot
w <- rowsum(tdm)
library(tidyverse) # Importing tidyverse
library(tm)
DB  <- read.csv('G:/My Drive/Portfolio/R/Project_1/dataset.csv', row.names = 1) # Importing the data.
# Splitting the date column
DB <- separate(DB, Release.Date, c("release.month", "release.day", "release.year"), sep = " ")
DB <- separate(DB, Genre, c("Genre.1", "Genre.2", "Genre.3", "Genre.4", "Genre.5", "Genre.6"), sep = ", ")
# Cleaning from unwanted symbols that might affect the analysis.
DB[] <- lapply(DB, gsub, pattern=',', replacement='') # Deleting all the , symbols.
DB[] <- lapply(DB, gsub, pattern="'", replacement='') # Deleting all the ' symbols.
DB[] <- lapply(DB, gsub, pattern='\\[', replacement='') # Deleting all the [ symbols.
DB[] <- lapply(DB, gsub, pattern='\\]', replacement='') # Deleting all the ] symbols.
worldwide_sales_mean <- mean(as.numeric(DB$World.Sales..in...), na.rm = TRUE)
worldwide_sales_sd <- sd(as.numeric(DB$World.Sales..in...), na.rm = TRUE)
corpus <- iconv(DB$Movie.Info, to = "utf-8")
corpus <- Corpus(VectorSource(corpus))
## Further cleaning for the Sentiment Analysis
corpus <- tm_map(corpus, tolower)
corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus, removeNumbers)
clean_set <- tm_map(corpus, removeWords, stopwords('english'))
clean_set <- tm_map(clean_set, stripWhitespace)
## Term document matrix
tdm <-  TermDocumentMatrix(clean_set)
# bar plot
w <- rowsum(tdm)
# bar plot
w <- rowSums(tdm)
tdm <- as.matrix(tdm)
# bar plot
w <- rowSums(tdm)
w <- subset(w, w>=25)
ggplot(aes(w))+
geom_bar(color="black")
ggplot(aes(w))+
geom_histogram(color="black")
w
w <- as.list(w)
ggplot(aes(w))+
geom_histogram(color="black")
w <- as.matrix(w)
ggplot(aes(w))+
geom_histogram(color="black")
w <- as.data.frame(w)
ggplot(aes(w))+
geom_histogram(color="black")
View(w)
ggplot(aes(w$V1))+
geom_histogram(color="black")
w <- as.data.frame(w)
ggplot(aes(w$V1))+
geom_histogram(color="black")
ggplot(w, aes(w$V1))+
geom_histogram(color="black")
ggplot(w, aes(V1))+
geom_histogram(color="black")
ggplot(w, aes(V1))+
geom_histogram(color="black", binwidth = 3)
ggplot(w, aes(V1))+
geom_histogram(color="black", binwidth = 0.3)
# bar plot
w <- rowSums(tdm)
w <- subset(w, w>=50)
w <- as.data.frame(w)
ggplot(w, aes(V1))+
geom_histogram(color="black", binwidth = 0.3)
ggplot(w, aes(w))+
geom_histogram(color="black", binwidth = 0.3)
View(w)
ggplot(w, aes(y=w))+
geom_histogram(color="black", binwidth = 0.3)
install.packages('syuzhet')
library(lubridate)
library(scales)
library(reshape2)
library(syuzhet)
# Obtain sentinent score
s <- get_nrc_sentiment(corpus)
corpus <- iconv(DB$Movie.Info, to = "utf-8")
# Obtain sentinent score
s <- get_nrc_sentiment(corpus)
s
View(s)
full_DB <- merge(DB, s)
View(full_DB)
View(full_DB)
full_DB <- full_join(DB, s)
full_DB <- cbind(DB, s)
View(full_DB)
library(tidyverse) # Importing tidyverse
library(tm)
library(syuzhet)
DB  <- read.csv('G:/My Drive/Portfolio/R/Project_1/dataset.csv', row.names = 1) # Importing the data.
# Splitting the date column
DB <- separate(DB, Release.Date, c("release.month", "release.day", "release.year"), sep = " ")
DB <- separate(DB, Genre, c("Genre.1", "Genre.2", "Genre.3", "Genre.4", "Genre.5", "Genre.6"), sep = ", ")
# Cleaning from unwanted symbols that might affect the analysis.
DB[] <- lapply(DB, gsub, pattern=',', replacement='') # Deleting all the , symbols.
DB[] <- lapply(DB, gsub, pattern="'", replacement='') # Deleting all the ' symbols.
DB[] <- lapply(DB, gsub, pattern='\\[', replacement='') # Deleting all the [ symbols.
DB[] <- lapply(DB, gsub, pattern='\\]', replacement='') # Deleting all the ] symbols.
worldwide_sales_mean <- mean(as.numeric(DB$World.Sales..in...), na.rm = TRUE)
worldwide_sales_sd <- sd(as.numeric(DB$World.Sales..in...), na.rm = TRUE)
corpus <- iconv(DB$Movie.Info, to = "utf-8") # Creating a list with all the movie descriptions
## Obtain sentiment score
sentiment_score_DF <- get_nrc_sentiment(corpus) # Creating a dataframe with sentiment scores.
full_DB <- cbind(DB, sentiment_score_DF) # Merging the dataframes
linear_model <- lm(full_DB$World.Sales..in..., full_DB$anger)
linear_model <- lm(full_DB$World.Sales..in...~full_DB$anger)
linear_model
summary(linear_model)
linear_model <- lm(full_DB$World.Sales..in...~full_DB$anger+full_DB$anticipation+
full_DB$disgust)
linear_model
summary(linear_model)
linear_model <- lm(full_DB$World.Sales..in...~full_DB$anger+full_DB$anticipation+
full_DB$disgust+full_DB$fear)
linear_model
summary(linear_model)
linear_model <- lm(full_DB$World.Sales..in...~full_DB$anger+full_DB$anticipation+
full_DB$disgust+full_DB$fear+full_DB$joy+full_DB$sadness+
full_DB$surprise+full_DB$trust+full_DB$negative+full_DB$positive)
summary(linear_model)
library(tidyverse) # Importing tidyverse
library(tm) # Importing tm
library(syuzhet) # Importing syuzhet
DB  <- read.csv('G:/My Drive/Portfolio/R/Project_1/dataset.csv', row.names = 1) # Importing the data.
# Splitting the date column
DB <- separate(DB, Release.Date, c("release.month", "release.day", "release.year"), sep = " ")
DB <- separate(DB, Genre, c("Genre.1", "Genre.2", "Genre.3", "Genre.4", "Genre.5", "Genre.6"), sep = ", ")
# Cleaning from unwanted symbols that might affect the analysis.
tm_map(DB, removePunctuation)
# Cleaning from unwanted symbols that might affect the analysis.
tm_map(DB$release.month, removePunctuation)
View(DB)
library(tidyverse) # Importing tidyverse
library(tm) # Importing tm
library(syuzhet) # Importing syuzhet
library(srt)# Importing srt
library(glue) # Importing glue
subtitles <- t(read_srt('G:/My Drive/Portfolio/R/Project_1/subtitles/1.srt')) # Experimenting with importing an SRT file
subtitles <- as.data.frame(subtitles)
subtitles <- unite(subtitles, col = "subtitles", 1:ncol(subtitles), remove = TRUE, sep = " ")
DB  <- read.csv('G:/My Drive/Portfolio/R/Project_1/dataset.csv', sep = " ", row.names = 1) # Importing the data.
DB  <- read.csv('G:/My Drive/Portfolio/R/Project_1/dataset.csv', sep = " ", row.names = 1) # Importing the data.
DB  <- read.csv('G:/My Drive/Portfolio/R/Project_1/dataset.csv', row.names = 1) # Importing the data.
DB$Subtitles <- NA
DB$Subtitles[1] <- subtitles$subtitles[4]
View(DB)
number_of_subtitles_files <- 13
print(subtitle_path)
for (i in 1:number_of_subtitles_files){
subtitle_path <- glue('G:/My Drive/Portfolio/R/Project_1/subtitles/{i}.srt')
print(subtitle_path)
}
for (i in 1:number_of_subtitles_files){
subtitle_path <- glue('G:/My Drive/Portfolio/R/Project_1/subtitles/{i}.srt')
subtitle <- t(read_srt(subtitle_path))
subtitle <- as.data.frame(subtitle)
subtitle <- unite(subtitle, col = "subtitles", 1:ncol(subtitles), remove = TRUE, sep = " ")
DB$Subtitles[i] <- subtitle$subtitle[i]
}
View(DB)
for (i in 1:number_of_subtitles_files){
subtitle_path <- glue('G:/My Drive/Portfolio/R/Project_1/subtitles/{i}.srt')
subtitle <- t(read_srt(subtitle_path))
subtitle <- as.data.frame(subtitle)
subtitle <- unite(subtitle, col = "subtitles", 1:ncol(subtitles), remove = TRUE, sep = " ")
DB$Subtitles[i] <- subtitle$subtitle[4]
}
View(DB)
number_of_subtitles_files <- 10
for (i in 1:number_of_subtitles_files){
subtitle_path <- glue('G:/My Drive/Portfolio/R/Project_1/subtitles/{i}.srt')
subtitle <- t(read_srt(subtitle_path))
subtitle <- as.data.frame(subtitle)
subtitle <- unite(subtitle, col = "subtitles", 1:ncol(subtitles), remove = TRUE, sep = " ")
DB$Subtitles[i] <- subtitle$subtitle[4]
}
for (i in 1:number_of_subtitles_files){
subtitle_path <- glue('G:/My Drive/Portfolio/R/Project_1/subtitles/{i}.srt')
subtitle <- suppressWarnings(t(read_srt(subtitle_path)))
subtitle <- as.data.frame(subtitle)
subtitle <- unite(subtitle, col = "subtitles", 1:ncol(subtitles), remove = TRUE, sep = " ")
DB$Subtitles[i] <- subtitle$subtitle[4]
}
View(DB)
library(tidyverse) # Importing tidyverse
library(tm) # Importing tm
library(syuzhet) # Importing syuzhet
library(srt)# Importing srt
library(glue) # Importing glue
DB  <- read.csv('G:/My Drive/Portfolio/R/Project_1/dataset.csv', row.names = 1) # Importing the data.
DB$Subtitles <- NA
number_of_subtitles_files <- 10
for (i in 1:number_of_subtitles_files){
subtitle_path <- glue('G:/My Drive/Portfolio/R/Project_1/subtitles/{i}.srt')
subtitle <- suppressWarnings(t(read_srt(subtitle_path)))
subtitle <- as.data.frame(subtitle)
subtitle <- unite(subtitle, col = "subtitles", 1:ncol(subtitles), remove = TRUE, sep = " ")
DB$Subtitles[i] <- subtitle$subtitle[4]
}
for (i in 1:number_of_subtitles_files){
subtitle_path <- glue('G:/My Drive/Portfolio/R/Project_1/subtitles/{i}.srt')
subtitle <- suppressWarnings(t(read_srt(subtitle_path)))
subtitle <- as.data.frame(subtitle)
subtitle <- unite(subtitle, col = "subtitles", 1:ncol(subtitles), remove = TRUE, sep = " ")
DB$Subtitle[i] <- subtitle$subtitle[4]
}
for (i in 1:number_of_subtitles_files){
subtitle_path <- glue('G:/My Drive/Portfolio/R/Project_1/subtitles/{i}.srt')
subtitle <- suppressWarnings(t(read_srt(subtitle_path)))
subtitle <- as.data.frame(subtitle)
subtitle <- unite(subtitle, col = "subtitles", 1:ncol(subtitle), remove = TRUE, sep = " ")
DB$Subtitles[i] <- subtitle$subtitle[4]
}
View(DB)
number_of_subtitles_files <- 13
for (i in 1:number_of_subtitles_files){
subtitle_path <- glue('G:/My Drive/Portfolio/R/Project_1/subtitles/{i}.srt')
subtitle <- suppressWarnings(t(read_srt(subtitle_path)))
subtitle <- as.data.frame(subtitle)
subtitle <- unite(subtitle, col = "subtitles", 1:ncol(subtitle), remove = TRUE, sep = " ")
DB$Subtitles[i] <- subtitle$subtitle[4]
}
View(DB)
subtitles <- t(read_srt('G:/My Drive/Portfolio/R/Project_1/subtitles/12.srt')) # Experimenting with importing an SRT file
subtitles <- (read_srt('G:/My Drive/Portfolio/R/Project_1/subtitles/12.srt')) # Experimenting with importing an SRT file
subtitles <- t(read_srt('G:/My Drive/Portfolio/R/Project_1/subtitles/12.srt')) # Experimenting with importing an SRT file
subtitles <- as.data.frame(subtitles)
subtitles <- unite(subtitles, col = "subtitles", 1:ncol(subtitles), remove = TRUE, sep = " ")
View(subtitle)
View(subtitles)
number_of_subtitles_files <- 74
for (i in 1:number_of_subtitles_files){
subtitle_path <- glue('G:/My Drive/Portfolio/R/Project_1/subtitles/{i}.srt')
subtitle <- suppressWarnings(t(read_srt(subtitle_path)))
subtitle <- as.data.frame(subtitle)
subtitle <- unite(subtitle, col = "subtitles", 1:ncol(subtitle), remove = TRUE, sep = " ")
DB$Subtitles[i] <- subtitle$subtitle[4]
}
suppressWarnings(library(tidyverse)) # Importing tidyverse
suppressWarnings(library(tm)) # Importing tm
suppressWarnings(library(syuzhet)) # Importing syuzhet
suppressWarnings(library(srt))# Importing srt
suppressWarnings(library(glue)) # Importing glue
subtitles <- t(read_srt('G:/My Drive/Portfolio/R/Project_1/subtitles/12.srt')) # Experimenting with importing an SRT file
DB  <- read.csv('G:/My Drive/Portfolio/R/Project_1/dataset.csv', row.names = 1) # Importing the data.
DB$Subtitles <- NA
number_of_subtitles_files <- 74
for (i in 1:number_of_subtitles_files){
subtitle_path <- glue('G:/My Drive/Portfolio/R/Project_1/subtitles/{i}.srt')
subtitle <- suppressWarnings(t(read_srt(subtitle_path)))
subtitle <- as.data.frame(subtitle)
subtitle <- unite(subtitle, col = "subtitles", 1:ncol(subtitle), remove = TRUE, sep = " ")
DB$Subtitles[i] <- subtitle$subtitle[4]
}
for (i in 1:number_of_subtitles_files){
subtitle_path <- glue('G:/My Drive/Portfolio/R/Project_1/subtitles/{i}.srt')
subtitle <- suppressWarnings(t(read_srt(subtitle_path)))
subtitle <- as.data.frame(subtitle)
subtitle <- unite(subtitle, col = "subtitles", 1:ncol(subtitle), remove = TRUE, sep = " ")
DB$Subtitles[i] <- subtitle$subtitle[4]
}
number_of_subtitles_files <- 50
for (i in 1:number_of_subtitles_files){
subtitle_path <- glue('G:/My Drive/Portfolio/R/Project_1/subtitles/{i}.srt')
subtitle <- suppressWarnings(t(read_srt(subtitle_path)))
subtitle <- as.data.frame(subtitle)
subtitle <- unite(subtitle, col = "subtitles", 1:ncol(subtitle), remove = TRUE, sep = " ")
DB$Subtitles[i] <- subtitle$subtitle[4]
}
number_of_subtitles_files <- 30
for (i in 1:number_of_subtitles_files){
subtitle_path <- glue('G:/My Drive/Portfolio/R/Project_1/subtitles/{i}.srt')
subtitle <- suppressWarnings(t(read_srt(subtitle_path)))
subtitle <- as.data.frame(subtitle)
subtitle <- unite(subtitle, col = "subtitles", 1:ncol(subtitle), remove = TRUE, sep = " ")
DB$Subtitles[i] <- subtitle$subtitle[4]
}
number_of_subtitles_files <- 23
for (i in 1:number_of_subtitles_files){
subtitle_path <- glue('G:/My Drive/Portfolio/R/Project_1/subtitles/{i}.srt')
subtitle <- suppressWarnings(t(read_srt(subtitle_path)))
subtitle <- as.data.frame(subtitle)
subtitle <- unite(subtitle, col = "subtitles", 1:ncol(subtitle), remove = TRUE, sep = " ")
DB$Subtitles[i] <- subtitle$subtitle[4]
}
subtitles <- t(read_srt('G:/My Drive/Portfolio/R/Project_1/subtitles/1.srt')) # Experimenting with importing an SRT file
subtitles <- t(read_srt('G:/My Drive/Portfolio/R/Project_1/subtitles/1.srt')) # Experimenting with importing an SRT file
subtitles <- read_srt('G:/My Drive/Portfolio/R/Project_1/subtitles/1.srt') # Experimenting with importing an SRT file
subtitles <- t(read_srt('G:/My Drive/Portfolio/R/Project_1/subtitles/1.srt')) # Experimenting with importing an SRT file
read_srt(readLines('G:/My Drive/Portfolio/R/Project_1/subtitles/1.srt', warn = FALSE))
subtitles <- t(read_srt('G:/My Drive/Portfolio/R/Project_1/subtitles/1.srt')) # Experimenting with importing an SRT file
library(multiplex)
subt <- read.srt('G:/My Drive/Portfolio/R/Project_1/subtitles/1.srt', header = FALSE)
subt <- read_srt('G:/My Drive/Portfolio/R/Project_1/subtitles/1.srt')
suppressWarnings(library(tidyverse)) # Importing tidyverse
suppressWarnings(library(tm)) # Importing tm
suppressWarnings(library(syuzhet)) # Importing syuzhet
suppressWarnings(library(srt))# Importing srt
suppressWarnings(library(glue)) # Importing glue
subt <- read_srt('G:/My Drive/Portfolio/R/Project_1/subtitles/1.srt')
View(subt)
subtitles <- t(read_srt('G:/My Drive/Portfolio/R/Project_1/subtitles/1.srt')) # Experimenting with importing an SRT file
subtitles <- as.data.frame(subtitles)
subtitles <- unite(subtitles, col = "subtitles", 1:ncol(subtitles), remove = TRUE, sep = " ")
View(subtitles)
DB$Subtitles <- NA
DB  <- read.csv('G:/My Drive/Portfolio/R/Project_1/dataset.csv', row.names = 1) # Importing the data.
DB$Subtitles <- NA
number_of_subtitles_files <- 23
number_of_subtitles_files <- 73
for (i in 1:number_of_subtitles_files){
subtitle_path <- glue('G:/My Drive/Portfolio/R/Project_1/subtitles/{i}.srt')
subtitle <- suppressWarnings(t(read_srt(subtitle_path)))
subtitle <- as.data.frame(subtitle)
subtitle <- unite(subtitle, col = "subtitles", 1:ncol(subtitle), remove = TRUE, sep = " ")
DB$Subtitles[i] <- subtitle$subtitle[4]
}
View(DB)
for (i in 1:number_of_subtitles_files){
subtitle_path <- glue('G:/My Drive/Portfolio/R/Project_1/subtitles/{i}.srt')
subtitle <- suppressWarnings(t(read_srt(subtitle_path)))
subtitle <- as.data.frame(subtitle)
subtitle <- unite(subtitle, col = "subtitles", 1:ncol(subtitle), remove = TRUE, sep = " ")
DB$Subtitles[i] <- subtitle$subtitle[4]
}
subtitles <- t(read_srt('G:/My Drive/Portfolio/R/Project_1/subtitles/36.srt')) # Experimenting with importing an SRT file
subtitles <- t(read_srt('G:/My Drive/Portfolio/R/Project_1/subtitles/36.srt')) # Experimenting with importing an SRT file
subtitles <- as.data.frame(subtitles)
subtitles <- unite(subtitles, col = "subtitles", 1:ncol(subtitles), remove = TRUE, sep = " ")
DB  <- read.csv('G:/My Drive/Portfolio/R/Project_1/dataset.csv', row.names = 1) # Importing the data.
DB$Subtitles <- NA
number_of_subtitles_files <- 73
for (i in 1:number_of_subtitles_files){
subtitle_path <- glue('G:/My Drive/Portfolio/R/Project_1/subtitles/{i}.srt')
subtitle <- suppressWarnings(t(read_srt(subtitle_path)))
subtitle <- as.data.frame(subtitle)
subtitle <- unite(subtitle, col = "subtitles", 1:ncol(subtitle), remove = TRUE, sep = " ")
DB$Subtitles[i] <- subtitle$subtitle[4]
}
View(DB)
for (i in 1:number_of_subtitles_files){
subtitle_path <- glue('G:/My Drive/Portfolio/R/Project_1/subtitles/{i}.srt')
subtitle <- suppressWarnings(t(read_srt(subtitle_path)))
subtitle <- as.data.frame(subtitle)
subtitle <- unite(subtitle, col = "subtitles", 1:ncol(subtitle), remove = TRUE, sep = " ")
DB$Subtitles[i] <- subtitle$subtitle[4]
}
View(DB)
for (i in 1:number_of_subtitles_files){
subtitle_path <- glue('G:/My Drive/Portfolio/R/Project_1/subtitles/{i}.srt')
subtitle <- suppressWarnings(t(read_srt(subtitle_path)))
subtitle <- as.data.frame(subtitle)
subtitle <- unite(subtitle, col = "subtitles", 1:ncol(subtitle), remove = TRUE, sep = " ")
DB$Subtitles[i] <- subtitle$subtitle[4]
}
View(DB)
for (i in 1:number_of_subtitles_files){
try(
subtitle_path <- glue('G:/My Drive/Portfolio/R/Project_1/subtitles/{i}.srt'),
subtitle <- suppressWarnings(t(read_srt(subtitle_path))),
subtitle <- as.data.frame(subtitle),
subtitle <- unite(subtitle, col = "subtitles", 1:ncol(subtitle), remove = TRUE, sep = " "),
DB$Subtitles[i] <- subtitle$subtitle[4]
)
}
for (i in 1:number_of_subtitles_files){
subtitle_path <- glue('G:/My Drive/Portfolio/R/Project_1/subtitles/{i}.srt')
subtitle <- suppressWarnings(t(read_srt(subtitle_path)))
subtitle <- as.data.frame(subtitle)
subtitle <- unite(subtitle, col = "subtitles", 1:ncol(subtitle), remove = TRUE, sep = " ")
DB$Subtitles[i] <- subtitle$subtitle[4]
}
View(DB)
for (i in 1:number_of_subtitles_files){
subtitle_path <- glue('G:/My Drive/Portfolio/R/Project_1/subtitles/{i}.srt')
subtitle <- suppressWarnings(t(read_srt(subtitle_path)))
subtitle <- as.data.frame(subtitle)
subtitle <- unite(subtitle, col = "subtitles", 1:ncol(subtitle), remove = TRUE, sep = " ")
DB$Subtitles[i] <- subtitle$subtitle[4]
}
View(DB)
suppressWarnings(library(tidyverse)) # Importing tidyverse
suppressWarnings(library(tm)) # Importing tm
suppressWarnings(library(syuzhet)) # Importing syuzhet
suppressWarnings(library(srt))# Importing srt
suppressWarnings(library(glue)) # Importing glue
subtitles <- t(read_srt('G:/My Drive/Portfolio/R/Project_1/subtitles/36.srt')) # Experimenting with importing an SRT file
subtitles <- as.data.frame(subtitles)
subtitles <- unite(subtitles, col = "subtitles", 1:ncol(subtitles), remove = TRUE, sep = " ")
corpus <- iconv(DB$Movie.Info, to = "utf-8") # Creating a list with all the movie descriptions
## Obtain sentiment score
sentiment_score_DF <- get_nrc_sentiment(corpus) # Creating a dataframe with sentiment scores.
full_DB <- cbind(DB, sentiment_score_DF) # Merging the dataframes
linear_model <- lm(full_DB$World.Sales..in...~full_DB$anger+full_DB$anticipation+
full_DB$disgust+full_DB$fear+full_DB$joy+full_DB$sadness+
full_DB$surprise+full_DB$trust+full_DB$negative+full_DB$positive)
View(full_DB)
suppressWarnings(library(tidyverse)) # Importing tidyverse
suppressWarnings(library(tm)) # Importing tm
suppressWarnings(library(syuzhet)) # Importing syuzhet
suppressWarnings(library(srt))# Importing srt
suppressWarnings(library(glue)) # Importing glue
DB  <- read.csv('G:/My Drive/Portfolio/R/Project_1/dataset.csv', row.names = 1) # Importing the data.
DB$Subtitles <- NA
number_of_subtitles_files <- 490
progress_bar <- txtProgressBar(min = 0,
max = number_of_subtitles_files,
style = 3,
width = 50,
char = "=")
for (i in 1:number_of_subtitles_files){
try({
subtitle_path <- glue('G:/My Drive/Portfolio/R/Project_1/subtitles/{i}.srt')
subtitle <- suppressWarnings(t(read_srt(subtitle_path)))
subtitle <- as.data.frame(subtitle)
subtitle <- unite(subtitle, col = "subtitles", 1:ncol(subtitle), remove = TRUE, sep = " ")
DB$Subtitles[i] <- subtitle$subtitle[4]
setTxtProgressBar(progress_bar, i)
},
silent = TRUE)
}
View(DB)
